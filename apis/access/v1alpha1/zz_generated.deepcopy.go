//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureObservation) DeepCopyInto(out *AzureObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureObservation.
func (in *AzureObservation) DeepCopy() *AzureObservation {
	if in == nil {
		return nil
	}
	out := new(AzureObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureParameters) DeepCopyInto(out *AzureParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IdentityProviderID != nil {
		in, out := &in.IdentityProviderID, &out.IdentityProviderID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureParameters.
func (in *AzureParameters) DeepCopy() *AzureParameters {
	if in == nil {
		return nil
	}
	out := new(AzureParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludeObservation) DeepCopyInto(out *ExcludeObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludeObservation.
func (in *ExcludeObservation) DeepCopy() *ExcludeObservation {
	if in == nil {
		return nil
	}
	out := new(ExcludeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludeParameters) DeepCopyInto(out *ExcludeParameters) {
	*out = *in
	if in.AnyValidServiceToken != nil {
		in, out := &in.AnyValidServiceToken, &out.AnyValidServiceToken
		*out = new(bool)
		**out = **in
	}
	if in.AuthMethod != nil {
		in, out := &in.AuthMethod, &out.AuthMethod
		*out = new(string)
		**out = **in
	}
	if in.Azure != nil {
		in, out := &in.Azure, &out.Azure
		*out = make([]AzureParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(bool)
		**out = **in
	}
	if in.CommonName != nil {
		in, out := &in.CommonName, &out.CommonName
		*out = new(string)
		**out = **in
	}
	if in.DevicePosture != nil {
		in, out := &in.DevicePosture, &out.DevicePosture
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EmailDomain != nil {
		in, out := &in.EmailDomain, &out.EmailDomain
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Everyone != nil {
		in, out := &in.Everyone, &out.Everyone
		*out = new(bool)
		**out = **in
	}
	if in.Geo != nil {
		in, out := &in.Geo, &out.Geo
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]GithubParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Gsuite != nil {
		in, out := &in.Gsuite, &out.Gsuite
		*out = make([]GsuiteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginMethod != nil {
		in, out := &in.LoginMethod, &out.LoginMethod
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Okta != nil {
		in, out := &in.Okta, &out.Okta
		*out = make([]OktaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SAML != nil {
		in, out := &in.SAML, &out.SAML
		*out = make([]SAMLParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceToken != nil {
		in, out := &in.ServiceToken, &out.ServiceToken
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludeParameters.
func (in *ExcludeParameters) DeepCopy() *ExcludeParameters {
	if in == nil {
		return nil
	}
	out := new(ExcludeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GithubObservation) DeepCopyInto(out *GithubObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GithubObservation.
func (in *GithubObservation) DeepCopy() *GithubObservation {
	if in == nil {
		return nil
	}
	out := new(GithubObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GithubParameters) DeepCopyInto(out *GithubParameters) {
	*out = *in
	if in.IdentityProviderID != nil {
		in, out := &in.IdentityProviderID, &out.IdentityProviderID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Teams != nil {
		in, out := &in.Teams, &out.Teams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GithubParameters.
func (in *GithubParameters) DeepCopy() *GithubParameters {
	if in == nil {
		return nil
	}
	out := new(GithubParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Group) DeepCopyInto(out *Group) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Group.
func (in *Group) DeepCopy() *Group {
	if in == nil {
		return nil
	}
	out := new(Group)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Group) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupList) DeepCopyInto(out *GroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Group, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupList.
func (in *GroupList) DeepCopy() *GroupList {
	if in == nil {
		return nil
	}
	out := new(GroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupObservation) DeepCopyInto(out *GroupObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupObservation.
func (in *GroupObservation) DeepCopy() *GroupObservation {
	if in == nil {
		return nil
	}
	out := new(GroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupParameters) DeepCopyInto(out *GroupParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]ExcludeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]IncludeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Require != nil {
		in, out := &in.Require, &out.Require
		*out = make([]RequireParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupParameters.
func (in *GroupParameters) DeepCopy() *GroupParameters {
	if in == nil {
		return nil
	}
	out := new(GroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSpec) DeepCopyInto(out *GroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSpec.
func (in *GroupSpec) DeepCopy() *GroupSpec {
	if in == nil {
		return nil
	}
	out := new(GroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupStatus) DeepCopyInto(out *GroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupStatus.
func (in *GroupStatus) DeepCopy() *GroupStatus {
	if in == nil {
		return nil
	}
	out := new(GroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GsuiteObservation) DeepCopyInto(out *GsuiteObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GsuiteObservation.
func (in *GsuiteObservation) DeepCopy() *GsuiteObservation {
	if in == nil {
		return nil
	}
	out := new(GsuiteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GsuiteParameters) DeepCopyInto(out *GsuiteParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IdentityProviderID != nil {
		in, out := &in.IdentityProviderID, &out.IdentityProviderID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GsuiteParameters.
func (in *GsuiteParameters) DeepCopy() *GsuiteParameters {
	if in == nil {
		return nil
	}
	out := new(GsuiteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeAzureObservation) DeepCopyInto(out *IncludeAzureObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeAzureObservation.
func (in *IncludeAzureObservation) DeepCopy() *IncludeAzureObservation {
	if in == nil {
		return nil
	}
	out := new(IncludeAzureObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeAzureParameters) DeepCopyInto(out *IncludeAzureParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IdentityProviderID != nil {
		in, out := &in.IdentityProviderID, &out.IdentityProviderID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeAzureParameters.
func (in *IncludeAzureParameters) DeepCopy() *IncludeAzureParameters {
	if in == nil {
		return nil
	}
	out := new(IncludeAzureParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeGithubObservation) DeepCopyInto(out *IncludeGithubObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeGithubObservation.
func (in *IncludeGithubObservation) DeepCopy() *IncludeGithubObservation {
	if in == nil {
		return nil
	}
	out := new(IncludeGithubObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeGithubParameters) DeepCopyInto(out *IncludeGithubParameters) {
	*out = *in
	if in.IdentityProviderID != nil {
		in, out := &in.IdentityProviderID, &out.IdentityProviderID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Teams != nil {
		in, out := &in.Teams, &out.Teams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeGithubParameters.
func (in *IncludeGithubParameters) DeepCopy() *IncludeGithubParameters {
	if in == nil {
		return nil
	}
	out := new(IncludeGithubParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeGsuiteObservation) DeepCopyInto(out *IncludeGsuiteObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeGsuiteObservation.
func (in *IncludeGsuiteObservation) DeepCopy() *IncludeGsuiteObservation {
	if in == nil {
		return nil
	}
	out := new(IncludeGsuiteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeGsuiteParameters) DeepCopyInto(out *IncludeGsuiteParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IdentityProviderID != nil {
		in, out := &in.IdentityProviderID, &out.IdentityProviderID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeGsuiteParameters.
func (in *IncludeGsuiteParameters) DeepCopy() *IncludeGsuiteParameters {
	if in == nil {
		return nil
	}
	out := new(IncludeGsuiteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObservation) DeepCopyInto(out *IncludeObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObservation.
func (in *IncludeObservation) DeepCopy() *IncludeObservation {
	if in == nil {
		return nil
	}
	out := new(IncludeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeOktaObservation) DeepCopyInto(out *IncludeOktaObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeOktaObservation.
func (in *IncludeOktaObservation) DeepCopy() *IncludeOktaObservation {
	if in == nil {
		return nil
	}
	out := new(IncludeOktaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeOktaParameters) DeepCopyInto(out *IncludeOktaParameters) {
	*out = *in
	if in.IdentityProviderID != nil {
		in, out := &in.IdentityProviderID, &out.IdentityProviderID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeOktaParameters.
func (in *IncludeOktaParameters) DeepCopy() *IncludeOktaParameters {
	if in == nil {
		return nil
	}
	out := new(IncludeOktaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeParameters) DeepCopyInto(out *IncludeParameters) {
	*out = *in
	if in.AnyValidServiceToken != nil {
		in, out := &in.AnyValidServiceToken, &out.AnyValidServiceToken
		*out = new(bool)
		**out = **in
	}
	if in.AuthMethod != nil {
		in, out := &in.AuthMethod, &out.AuthMethod
		*out = new(string)
		**out = **in
	}
	if in.Azure != nil {
		in, out := &in.Azure, &out.Azure
		*out = make([]IncludeAzureParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(bool)
		**out = **in
	}
	if in.CommonName != nil {
		in, out := &in.CommonName, &out.CommonName
		*out = new(string)
		**out = **in
	}
	if in.DevicePosture != nil {
		in, out := &in.DevicePosture, &out.DevicePosture
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EmailDomain != nil {
		in, out := &in.EmailDomain, &out.EmailDomain
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Everyone != nil {
		in, out := &in.Everyone, &out.Everyone
		*out = new(bool)
		**out = **in
	}
	if in.Geo != nil {
		in, out := &in.Geo, &out.Geo
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]IncludeGithubParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Gsuite != nil {
		in, out := &in.Gsuite, &out.Gsuite
		*out = make([]IncludeGsuiteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginMethod != nil {
		in, out := &in.LoginMethod, &out.LoginMethod
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Okta != nil {
		in, out := &in.Okta, &out.Okta
		*out = make([]IncludeOktaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SAML != nil {
		in, out := &in.SAML, &out.SAML
		*out = make([]IncludeSAMLParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceToken != nil {
		in, out := &in.ServiceToken, &out.ServiceToken
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeParameters.
func (in *IncludeParameters) DeepCopy() *IncludeParameters {
	if in == nil {
		return nil
	}
	out := new(IncludeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeSAMLObservation) DeepCopyInto(out *IncludeSAMLObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeSAMLObservation.
func (in *IncludeSAMLObservation) DeepCopy() *IncludeSAMLObservation {
	if in == nil {
		return nil
	}
	out := new(IncludeSAMLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeSAMLParameters) DeepCopyInto(out *IncludeSAMLParameters) {
	*out = *in
	if in.AttributeName != nil {
		in, out := &in.AttributeName, &out.AttributeName
		*out = new(string)
		**out = **in
	}
	if in.AttributeValue != nil {
		in, out := &in.AttributeValue, &out.AttributeValue
		*out = new(string)
		**out = **in
	}
	if in.IdentityProviderID != nil {
		in, out := &in.IdentityProviderID, &out.IdentityProviderID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeSAMLParameters.
func (in *IncludeSAMLParameters) DeepCopy() *IncludeSAMLParameters {
	if in == nil {
		return nil
	}
	out := new(IncludeSAMLParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OktaObservation) DeepCopyInto(out *OktaObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OktaObservation.
func (in *OktaObservation) DeepCopy() *OktaObservation {
	if in == nil {
		return nil
	}
	out := new(OktaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OktaParameters) DeepCopyInto(out *OktaParameters) {
	*out = *in
	if in.IdentityProviderID != nil {
		in, out := &in.IdentityProviderID, &out.IdentityProviderID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OktaParameters.
func (in *OktaParameters) DeepCopy() *OktaParameters {
	if in == nil {
		return nil
	}
	out := new(OktaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequireAzureObservation) DeepCopyInto(out *RequireAzureObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequireAzureObservation.
func (in *RequireAzureObservation) DeepCopy() *RequireAzureObservation {
	if in == nil {
		return nil
	}
	out := new(RequireAzureObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequireAzureParameters) DeepCopyInto(out *RequireAzureParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IdentityProviderID != nil {
		in, out := &in.IdentityProviderID, &out.IdentityProviderID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequireAzureParameters.
func (in *RequireAzureParameters) DeepCopy() *RequireAzureParameters {
	if in == nil {
		return nil
	}
	out := new(RequireAzureParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequireGithubObservation) DeepCopyInto(out *RequireGithubObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequireGithubObservation.
func (in *RequireGithubObservation) DeepCopy() *RequireGithubObservation {
	if in == nil {
		return nil
	}
	out := new(RequireGithubObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequireGithubParameters) DeepCopyInto(out *RequireGithubParameters) {
	*out = *in
	if in.IdentityProviderID != nil {
		in, out := &in.IdentityProviderID, &out.IdentityProviderID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Teams != nil {
		in, out := &in.Teams, &out.Teams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequireGithubParameters.
func (in *RequireGithubParameters) DeepCopy() *RequireGithubParameters {
	if in == nil {
		return nil
	}
	out := new(RequireGithubParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequireGsuiteObservation) DeepCopyInto(out *RequireGsuiteObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequireGsuiteObservation.
func (in *RequireGsuiteObservation) DeepCopy() *RequireGsuiteObservation {
	if in == nil {
		return nil
	}
	out := new(RequireGsuiteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequireGsuiteParameters) DeepCopyInto(out *RequireGsuiteParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IdentityProviderID != nil {
		in, out := &in.IdentityProviderID, &out.IdentityProviderID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequireGsuiteParameters.
func (in *RequireGsuiteParameters) DeepCopy() *RequireGsuiteParameters {
	if in == nil {
		return nil
	}
	out := new(RequireGsuiteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequireObservation) DeepCopyInto(out *RequireObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequireObservation.
func (in *RequireObservation) DeepCopy() *RequireObservation {
	if in == nil {
		return nil
	}
	out := new(RequireObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequireOktaObservation) DeepCopyInto(out *RequireOktaObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequireOktaObservation.
func (in *RequireOktaObservation) DeepCopy() *RequireOktaObservation {
	if in == nil {
		return nil
	}
	out := new(RequireOktaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequireOktaParameters) DeepCopyInto(out *RequireOktaParameters) {
	*out = *in
	if in.IdentityProviderID != nil {
		in, out := &in.IdentityProviderID, &out.IdentityProviderID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequireOktaParameters.
func (in *RequireOktaParameters) DeepCopy() *RequireOktaParameters {
	if in == nil {
		return nil
	}
	out := new(RequireOktaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequireParameters) DeepCopyInto(out *RequireParameters) {
	*out = *in
	if in.AnyValidServiceToken != nil {
		in, out := &in.AnyValidServiceToken, &out.AnyValidServiceToken
		*out = new(bool)
		**out = **in
	}
	if in.AuthMethod != nil {
		in, out := &in.AuthMethod, &out.AuthMethod
		*out = new(string)
		**out = **in
	}
	if in.Azure != nil {
		in, out := &in.Azure, &out.Azure
		*out = make([]RequireAzureParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(bool)
		**out = **in
	}
	if in.CommonName != nil {
		in, out := &in.CommonName, &out.CommonName
		*out = new(string)
		**out = **in
	}
	if in.DevicePosture != nil {
		in, out := &in.DevicePosture, &out.DevicePosture
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EmailDomain != nil {
		in, out := &in.EmailDomain, &out.EmailDomain
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Everyone != nil {
		in, out := &in.Everyone, &out.Everyone
		*out = new(bool)
		**out = **in
	}
	if in.Geo != nil {
		in, out := &in.Geo, &out.Geo
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]RequireGithubParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Gsuite != nil {
		in, out := &in.Gsuite, &out.Gsuite
		*out = make([]RequireGsuiteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginMethod != nil {
		in, out := &in.LoginMethod, &out.LoginMethod
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Okta != nil {
		in, out := &in.Okta, &out.Okta
		*out = make([]RequireOktaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SAML != nil {
		in, out := &in.SAML, &out.SAML
		*out = make([]RequireSAMLParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceToken != nil {
		in, out := &in.ServiceToken, &out.ServiceToken
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequireParameters.
func (in *RequireParameters) DeepCopy() *RequireParameters {
	if in == nil {
		return nil
	}
	out := new(RequireParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequireSAMLObservation) DeepCopyInto(out *RequireSAMLObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequireSAMLObservation.
func (in *RequireSAMLObservation) DeepCopy() *RequireSAMLObservation {
	if in == nil {
		return nil
	}
	out := new(RequireSAMLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequireSAMLParameters) DeepCopyInto(out *RequireSAMLParameters) {
	*out = *in
	if in.AttributeName != nil {
		in, out := &in.AttributeName, &out.AttributeName
		*out = new(string)
		**out = **in
	}
	if in.AttributeValue != nil {
		in, out := &in.AttributeValue, &out.AttributeValue
		*out = new(string)
		**out = **in
	}
	if in.IdentityProviderID != nil {
		in, out := &in.IdentityProviderID, &out.IdentityProviderID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequireSAMLParameters.
func (in *RequireSAMLParameters) DeepCopy() *RequireSAMLParameters {
	if in == nil {
		return nil
	}
	out := new(RequireSAMLParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAMLObservation) DeepCopyInto(out *SAMLObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAMLObservation.
func (in *SAMLObservation) DeepCopy() *SAMLObservation {
	if in == nil {
		return nil
	}
	out := new(SAMLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAMLParameters) DeepCopyInto(out *SAMLParameters) {
	*out = *in
	if in.AttributeName != nil {
		in, out := &in.AttributeName, &out.AttributeName
		*out = new(string)
		**out = **in
	}
	if in.AttributeValue != nil {
		in, out := &in.AttributeValue, &out.AttributeValue
		*out = new(string)
		**out = **in
	}
	if in.IdentityProviderID != nil {
		in, out := &in.IdentityProviderID, &out.IdentityProviderID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAMLParameters.
func (in *SAMLParameters) DeepCopy() *SAMLParameters {
	if in == nil {
		return nil
	}
	out := new(SAMLParameters)
	in.DeepCopyInto(out)
	return out
}
